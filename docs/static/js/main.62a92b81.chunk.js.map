{"version":3,"sources":["components/AddCategoria.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategoria","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","_inputValue","trim","length","cats","type","value","onChange","target","getGif","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categorias","index","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACbC,mBAAS,IADI,mBAC1CC,EAD0C,KAC9BC,EAD8B,KAYjD,OACE,0BAAMC,SAVa,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAcL,EAAWM,OAC5BD,EAAYE,OAAO,IACpBT,GAAc,SAAAU,GAAI,OAAKH,GAAL,mBAAqBG,OACvCP,EAAc,OAMd,2BACEQ,KAAK,OACLC,MAAOV,EACPW,SAAU,SAACR,GAAD,OAAOF,EAAcE,EAAES,OAAOF,Y,uBCpBnCG,EAAM,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,kGACmFC,UAAUH,IAD7F,SAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GACpB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATjB,kBAYZM,GAZY,4CAAH,sDCENO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,yBAAKc,UAAU,2CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFGO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECDd,SAACA,GAAe,IAAD,EACff,mBAAS,CACjCsB,KAAM,GACNa,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAkBzC,OAZAC,qBAAU,WACRxB,EAAOC,GAAWwB,MAAK,SAAAC,GAAI,OACzBC,YAAW,WACTJ,EAAS,CACPf,KAAMkB,EACNL,SAAS,MAGV,UAEJ,CAACpB,IAEGqB,EDfgBM,CAAc3B,GAA9BO,EAFiC,EAEjCA,KAAKa,EAF4B,EAE5BA,QAEZ,OACE,oCACE,wBAAIJ,UAAU,sCAAsChB,GACnDoB,GAAW,uBAAGJ,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aAEXT,EAAKE,KAAI,SAACC,GACR,OAAO,kBAAC,EAAD,iBAAiBA,EAAjB,CAAsBkB,IAAKlB,EAAIC,YEXrCkB,EAAe,WAAM,MAGI5C,mBAAS,CAAC,gBAHd,mBAGzB6C,EAHyB,KAGb9C,EAHa,KAUhC,OAAO,oCACL,4CACA,kBAAC,EAAD,CAAcA,cAAeA,IAC7B,6BACA,4BAEI8C,EAAWrB,KAAI,SAACT,EAAW+B,GAAZ,OACb,kBAAC,EAAD,CAASH,IAAKG,EAAO/B,UAAWA,UChB1CgC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.62a92b81.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategoria = ({ setCategorias }) => {\n  const [inputValue, setInputValue] = useState('')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const _inputValue = inputValue.trim()\n    if(_inputValue.length>2){\n      setCategorias(cats => [_inputValue, ...cats])\n      setInputValue('')\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n    </form>\n  )\n}\n\nAddCategoria.propTypes = {\n  setCategorias : PropTypes.func.isRequired\n}","export const getGif = async ( categoria ) => {\n  const url = `http://api.giphy.com/v1/gifs/search?api_key=cavs4vz9nHwCzzNOMw90nYYVgC7zUm7q&limit=10&q=${encodeURI(categoria)}`\n  const resp = await fetch(url)\n  const { data } = await resp.json()\n\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url\n    }\n  })\n  return (gifs)\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn \">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ categoria }) => {\n\n  const {data,loading} = useFetchGifs( categoria )\n\n  return (\n    <>\n      <h3 className=\" animate__animated animate__fadeIn\">{categoria}</h3>\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}      \n      <div className=\"card-grid\">\n        {\n          data.map((img) => {\n            return <GifGridItem {...img} key={img.id} />\n          })\n        }\n      </div>\n    </>\n  )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGif } from '../helpers/getGifs'\n\nexport const useFetchGifs = (categoria) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  })\n\n  useEffect(() => {\n    getGif(categoria).then(imgs =>\n      setTimeout(() => {\n        setState({\n          data: imgs,\n          loading: false\n        })\n\n      }, 3000)\n    )\n  }, [categoria])\n\n  return state //data:[],loading:true\n}\n","import React, {useState} from 'react'\nimport { AddCategoria } from './components/AddCategoria'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n\n  // const categorias = ['One Punch', 'Samurai X', 'Dragon Ball']\n  const [categorias, setCategorias] = useState(['Dragon Ball'])\n\n  // const handleAdd = () => {\n  //   const newCategoria = 'One Piece'\n  //   setCategorias([...categorias,newCategoria])\n  // }\n\n  return <>\n    <h2>GifExpertApp</h2>\n    <AddCategoria setCategorias={setCategorias} />\n    <hr/>\n    <ol>\n      {\n        categorias.map((categoria, index)=>\n          <GifGrid key={index} categoria={categoria} />\n        )\n      }\n    </ol>\n  </>\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GitExpertApp'\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}